{{- if eq .Values.architecture "sentinel" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ printf "%s-replica" (include "valkey.fullname" .) }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "valkey.replica.labels" . | nindent 4 }}
  {{- with (include "valkey.annotations" .) }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
spec:
  serviceName: {{ include "valkey.replica.serviceName" . }}
  replicas: {{ .Values.replica.replicaCount }}
  selector:
    matchLabels:
      {{- include "valkey.replica.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "valkey.replica.selectorLabels" . | nindent 8 }}
      {{- with (include "valkey.annotations" .) }}
      annotations:
        {{- . | nindent 8 }}
        checksum/config: {{ include (print $.Template.BasePath "/replicas/configmap.yaml") . | sha256sum }}
        {{- if .Values.auth.enabled }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- end }}
      {{- end }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "valkey.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.sysctls.enabled }}
      initContainers:
        - name: init-sysctl
          image: {{ include "valkey.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              install_packages procps
              sysctl -w net.core.somaxconn=65535
          securityContext:
            privileged: true
            runAsUser: 0
          {{- if .Values.sysctls.resources }}
          resources: {{- toYaml .Values.sysctls.resources | nindent 12 }}
          {{- end }}
      {{- end }}
      {{- if and .Values.volumePermissions.enabled .Values.replica.persistence.enabled }}
        - name: volume-permissions
          image: {{ .Values.volumePermissions.image.registry }}/{{ .Values.volumePermissions.image.repository }}:{{ .Values.volumePermissions.image.tag }}
          imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy }}
          command:
            - /bin/bash
            - -ec
            - |
              chown -R {{ .Values.podSecurityContext.runAsUser }}:{{ .Values.podSecurityContext.fsGroup }} /data
          securityContext:
            runAsUser: 0
          {{- if .Values.volumePermissions.resources }}
          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: valkey-data
              mountPath: /data
      {{- end }}
      containers:
        - name: valkey
          image: {{ include "valkey.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          command:
            - /bin/bash
          args:
            - -c
            - |
              {{- if .Values.auth.enabled }}
              export REDISCLI_AUTH="$VALKEY_PASSWORD"
              # Copy config and add requirepass
              cp /opt/valkey/etc/valkey.conf /tmp/valkey.conf
              echo "requirepass $VALKEY_PASSWORD" >> /tmp/valkey.conf
              echo "masterauth $VALKEY_PASSWORD" >> /tmp/valkey.conf
              valkey-server /tmp/valkey.conf --replicaof {{ include "valkey.master.serviceName" . }} 6379
              {{- else }}
              valkey-server /opt/valkey/etc/valkey.conf --replicaof {{ include "valkey.master.serviceName" . }} 6379
              {{- end }}
          env:
            {{- if .Values.auth.enabled }}
            - name: VALKEY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "valkey.secretName" . }}
                  key: {{ include "valkey.secretPasswordKey" . }}
            {{- end }}
          ports:
            - name: valkey
              containerPort: 6379
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - |
                  {{- if .Values.auth.enabled }}
                  valkey-cli -a "$VALKEY_PASSWORD" ping
                  {{- else }}
                  valkey-cli ping
                  {{- end }}
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - |
                  {{- if .Values.auth.enabled }}
                  valkey-cli -a "$VALKEY_PASSWORD" ping
                  {{- else }}
                  valkey-cli ping
                  {{- end }}
          {{- if .Values.replica.resources }}
          resources: {{- toYaml .Values.replica.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: valkey-data
              mountPath: /data
            - name: config
              mountPath: /opt/valkey/etc/valkey.conf
              subPath: valkey.conf
            - name: tmp
              mountPath: /tmp
        {{- if .Values.metrics.enabled }}
        - name: metrics
          image: {{ include "valkey.metrics.image" . }}
          imagePullPolicy: {{ .Values.metrics.image.pullPolicy }}
          env:
            - name: VALKEY_ADDR
              value: "valkey://127.0.0.1:6379"
            {{- if .Values.auth.enabled }}
            - name: VALKEY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "valkey.secretName" . }}
                  key: {{ include "valkey.secretPasswordKey" . }}
            {{- end }}
          ports:
            - name: metrics
              containerPort: 9121
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: metrics
            initialDelaySeconds: 15
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: metrics
            initialDelaySeconds: 5
            timeoutSeconds: 1
          {{- if .Values.metrics.resources }}
          resources: {{- toYaml .Values.metrics.resources | nindent 12 }}
          {{- end }}
        {{- end }}
      {{- with .Values.replica.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.replica.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.replica.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ printf "%s-replica" (include "valkey.fullname" .) }}
        - name: tmp
          emptyDir: {}
  {{- if .Values.replica.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: valkey-data
        labels:
          {{- include "valkey.replica.labels" . | nindent 10 }}
        {{- with .Values.replica.persistence.annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          {{- range .Values.replica.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.replica.persistence.size | quote }}
        {{- if .Values.replica.persistence.storageClass }}
        {{- if (eq "-" .Values.replica.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.replica.persistence.storageClass | quote }}
        {{- end }}
        {{- else if .Values.global.storageClass }}
        storageClassName: {{ .Values.global.storageClass | quote }}
        {{- end }}
        {{- with .Values.replica.persistence.selector }}
        selector:
          {{- toYaml . | nindent 10 }}
        {{- end }}
  {{- else }}
        - name: valkey-data
          emptyDir: {}
  {{- end }}
{{- end }}