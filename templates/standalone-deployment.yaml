{{- if eq .Values.architecture "standalone" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "valkey.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "valkey.standalone.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.standalone.replicaCount }}
  selector:
    matchLabels:
      {{- include "valkey.standalone.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "valkey.standalone.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/standalone-configmap.yaml") . | sha256sum }}
        {{- if .Values.auth.enabled }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "valkey.serviceAccountName" . }}
      securityContext:
        fsGroup: 999
        runAsGroup: 999
        runAsUser: 999
      containers:
        - name: valkey
          image: {{ include "valkey.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 999
          command:
            - /bin/bash
          args:
            - -c
            - |
              {{- if .Values.auth.enabled }}
              export REDISCLI_AUTH="$VALKEY_PASSWORD"
              {{- end }}
              valkey-server /opt/valkey/etc/valkey.conf
          {{- if .Values.auth.enabled }}
          env:
            - name: VALKEY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "valkey.secretName" . }}
                  key: {{ include "valkey.secretPasswordKey" . }}
          {{- end }}
          ports:
            - name: valkey
              containerPort: 6379
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - |
                  {{- if .Values.auth.enabled }}
                  valkey-cli -a "$VALKEY_PASSWORD" ping
                  {{- else }}
                  valkey-cli ping
                  {{- end }}
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - |
                  {{- if .Values.auth.enabled }}
                  valkey-cli -a "$VALKEY_PASSWORD" ping
                  {{- else }}
                  valkey-cli ping
                  {{- end }}
          {{- if .Values.standalone.resources }}
          resources:
            {{- toYaml .Values.standalone.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: valkey-data
              mountPath: /data
            - name: config
              mountPath: /opt/valkey/etc/valkey.conf
              subPath: valkey.conf
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: config
          configMap:
            name: {{ include "valkey.fullname" . }}
        - name: tmp
          emptyDir: {}
        {{- if .Values.standalone.persistence.enabled }}
        - name: valkey-data
          persistentVolumeClaim:
            claimName: {{ include "valkey.fullname" . }}
        {{- else }}
        - name: valkey-data
          emptyDir: {}
        {{- end }}
{{- end }}