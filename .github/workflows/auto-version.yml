name: Auto Version and Release

on:
  push:
    branches: [ main ]
    paths:
      - 'templates/**'
      - 'values.yaml'
      - 'Chart.yaml'
  workflow_dispatch:

jobs:
  auto-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Check if templates changed
        id: check_changes
        run: |
          # Get list of changed files in the current push
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          echo "Changed files: $CHANGED_FILES"

          # Check if templates, values.yaml, or Chart.yaml changed
          TEMPLATES_CHANGED=false
          if echo "$CHANGED_FILES" | grep -E "(templates/|values\.yaml)" && ! echo "$CHANGED_FILES" | grep -q "Chart.yaml"; then
            TEMPLATES_CHANGED=true
          fi

          echo "templates_changed=$TEMPLATES_CHANGED" >> $GITHUB_OUTPUT
          echo "Templates changed: $TEMPLATES_CHANGED"

      - name: Auto-increment chart version
        if: steps.check_changes.outputs.templates_changed == 'true'
        run: |
          CURRENT_VERSION=$(yq '.version' Chart.yaml)
          echo "Current version: $CURRENT_VERSION"

          # Parse version (assuming semantic versioning)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"

          # Increment patch version
          PATCH=$((PATCH + 1))
          NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"

          echo "New version: $NEW_VERSION"

          # Update Chart.yaml
          yq -i ".version = \"$NEW_VERSION\"" Chart.yaml

          echo "Updated Chart.yaml:"
          cat Chart.yaml

      - name: Commit version bump
        if: steps.check_changes.outputs.templates_changed == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          NEW_VERSION=$(yq '.version' Chart.yaml)
          git add Chart.yaml
          git commit -m "chore: bump chart version to $NEW_VERSION"
          git push

      - name: Install Helm
        if: steps.check_changes.outputs.templates_changed == 'true'
        uses: azure/setup-helm@v4
        with:
          version: v3.12.1

      - name: Run chart-releaser
        if: steps.check_changes.outputs.templates_changed == 'true'
        uses: helm/chart-releaser-action@v1.6.0
        with:
          charts_dir: .
          skip_existing: true
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Trigger Pages update
        if: steps.check_changes.outputs.templates_changed == 'true'
        run: |
          sleep 5  # Wait for release to be processed
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/pages.yml/dispatches \
            -d '{"ref":"main"}'